#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#define STR_SIZE 1000

/** this is a string for storing input **/
char temp[STR_SIZE];

/** 
 * structure for holding information about commands 
 */
typedef struct def_command {
    char name[16]; /// stores the name of the command 
    int data[7]; /// stores command parameters 
} command;

/**
 * function created solely for debuggin purposes
 * prints the given command to stdin
 */
void print_command(command *c) 
{
	if (c == 0)
		return;	
	printf("%s\n", c->name);
	for (int i = 0; i < 7 && c->data[i] > -1; i++)
		printf("%d ", c->data[i]);
	printf("\n");
}

/**
 * function for parsing commands
 * it reads from the input and from given data creates a command
 * in case of failure returns 0 pointer 
 */
command* parse_command() {	
	if (!fgets(temp, STR_SIZE, stdin)) 
		return 0;

	command *ret = malloc(sizeof(command));

	char *name = strtok(temp, " \n");
	strcpy(ret->name, name);
	char *nxt = 0;
	int ind = 0;

	while (nxt = strtok(NULL, " \n"))
	{
		int cur = atoi(nxt);	
		ret->data[ind++] = cur;
	}
	print_command(ret);

	return ret;
}


